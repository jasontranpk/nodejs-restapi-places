{"version":3,"file":"static/js/842.b5de6ce6.chunk.js","mappings":"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","sources":["places/pages/NewPlace.js","shared/components/FormElements/ImageUpload.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/util/validators.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js"],"sourcesContent":["import { useHistory } from 'react-router-dom';\nimport { useContext } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport {\n\tVALIDATOR_MINLENGTH,\n\tVALIDATOR_REQUIRE,\n} from '../../shared/util/validators';\nimport useForm from '../../shared/hooks/form-hook';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport './PlaceForm.css';\n\nconst NewPlace = () => {\n\tconst { isLoading, error, sendRequest, clearError } = useHttpClient();\n\tconst authCtx = useContext(AuthContext);\n\tconst history = useHistory();\n\tconst [formState, inputHandler] = useForm({\n\t\ttitle: {\n\t\t\tvalue: '',\n\t\t\tisValid: false,\n\t\t},\n\t\tdescription: {\n\t\t\tvalue: '',\n\t\t\tisValid: false,\n\t\t},\n\t\taddress: {\n\t\t\tvalue: '',\n\t\t\tisValid: false,\n\t\t},\n\t\timage: {\n\t\t\tvalue: null,\n\t\t\tisValid: false,\n\t\t},\n\t});\n\n\tconst placeSubmitHandler = async (e) => {\n\t\te.preventDefault();\n\t\t/* \t\tconst body = JSON.stringify({\n\t\t\ttitle: formState.inputs.title.value,\n\t\t\tdescription: formState.inputs.description.value,\n\t\t\taddress: formState.inputs.address.value,\n\t\t\tcreator: authCtx.userId,\n\t\t}); */\n\t\tconsole.log(formState.inputs);\n\t\tconst formData = new FormData();\n\t\tformData.append('title', formState.inputs.title.value);\n\t\tformData.append('description', formState.inputs.description.value);\n\t\tformData.append('address', formState.inputs.address.value);\n\t\tformData.append('image', formState.inputs.image.value);\n\t\ttry {\n\t\t\tawait sendRequest(\n\t\t\t\tprocess.env.REACT_APP_BACKEND_URL + '/places',\n\t\t\t\t'POST',\n\t\t\t\tformData,\n\t\t\t\t{\n\t\t\t\t\tAuthorization: 'Bearer ' + authCtx.token,\n\t\t\t\t}\n\t\t\t);\n\t\t\thistory.push('/');\n\t\t} catch (err) {\n\t\t\tconsole.log(err);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<ErrorModal error={error} onClear={clearError} />\n\t\t\t<form className='place-form' onSubmit={placeSubmitHandler}>\n\t\t\t\t<Input\n\t\t\t\t\tid='title'\n\t\t\t\t\telement='input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tlabel='Title*'\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n\t\t\t\t\terrorText='Please enter a valid title'\n\t\t\t\t/>\n\t\t\t\t<ImageUpload id='image' center onInput={inputHandler} />\n\t\t\t\t<Input\n\t\t\t\t\tid='address'\n\t\t\t\t\telement='input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tlabel='Address*'\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\n\t\t\t\t\terrorText='Please enter a valid address'\n\t\t\t\t/>\n\t\t\t\t<Input\n\t\t\t\t\tid='description'\n\t\t\t\t\telement='textarea'\n\t\t\t\t\tlabel='Description*'\n\t\t\t\t\tonInput={inputHandler}\n\t\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\n\t\t\t\t\terrorText='Please enter a valid description (at least 5 characters)'\n\t\t\t\t/>\n\t\t\t\t<Button type='submit' disabled={!formState.isValid}>\n\t\t\t\t\tADD PLACE\n\t\t\t\t</Button>\n\t\t\t\t<div className='center'>\n\t\t\t\t\t{isLoading && <LoadingSpinner asOverlay />}\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t</>\n\t);\n};\n\nexport default NewPlace;\n","import React, { useEffect, useRef, useState } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = (props) => {\n\tconst [file, setFile] = useState();\n\tconst [previewUrl, setPreviewUrl] = useState();\n\tconst [isValid, setIsValid] = useState();\n\n\tconst filePickerRef = useRef();\n\tconst pickImageHandler = () => {\n\t\tfilePickerRef.current.click();\n\t};\n\tuseEffect(() => {\n\t\tif (!file) {\n\t\t\treturn;\n\t\t}\n\t\tconst fileReader = new FileReader();\n\t\tfileReader.onload = () => {\n\t\t\tsetPreviewUrl(fileReader.result);\n\t\t};\n\t\tfileReader.readAsDataURL(file);\n\t}, [file]);\n\tconst pickedHandler = (e) => {\n\t\tlet pickedFile;\n\t\tlet fileIsValid = isValid;\n\t\tif (e.target.files && e.target.files.length === 1) {\n\t\t\tpickedFile = e.target.files[0];\n\t\t\tsetFile(pickedFile);\n\t\t\tsetIsValid(true);\n\t\t\tfileIsValid = true;\n\t\t} else {\n\t\t\tsetIsValid(false);\n\t\t\tfileIsValid = false;\n\t\t}\n\t\tconsole.log(`${props.id} - ${pickedFile} - ${fileIsValid}`);\n\t\tprops.onInput(props.id, pickedFile, fileIsValid);\n\t};\n\treturn (\n\t\t<div className='form-control'>\n\t\t\t<input\n\t\t\t\tref={filePickerRef}\n\t\t\t\tid={props.id}\n\t\t\t\ttype='file'\n\t\t\t\tstyle={{ display: 'none' }}\n\t\t\t\taccept='.jpg,.png,.jpeg,.gif,.webp'\n\t\t\t\tonChange={pickedHandler}\n\t\t\t/>\n\t\t\t<div className={`image-upload ${props.center && 'center'}`}>\n\t\t\t\t<div className='image-upload__preview'>\n\t\t\t\t\t{previewUrl && <img src={previewUrl} alt='Preview' />}\n\t\t\t\t\t{!previewUrl && <p>Please pick an image</p>}\n\t\t\t\t</div>\n\t\t\t\t<Button type='button' onClick={pickImageHandler}>\n\t\t\t\t\tPick Image\n\t\t\t\t</Button>\n\t\t\t</div>\n\t\t\t{!isValid && <p>{props.errorText}</p>}\n\t\t</div>\n\t);\n};\n\nexport default ImageUpload;\n","import { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\n\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'CHANGE':\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvalue: action.val,\n\t\t\t\tisValid: validate(action.val, action.validators),\n\t\t\t};\n\t\tcase 'TOUCH': {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tisTouched: true,\n\t\t\t};\n\t\t}\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst Input = (props) => {\n\tconst [inputState, dispatch] = useReducer(inputReducer, {\n\t\tvalue: props.initialValue || '',\n\t\tisValid: props.initialIsValid || false,\n\t\tisTouched: false,\n\t});\n\tconst { id, onInput } = props;\n\tconst { value, isValid } = inputState;\n\n\tuseEffect(() => {\n\t\tonInput(id, value, isValid);\n\t}, [id, value, isValid, onInput]);\n\tconst changeHandler = (e) => {\n\t\tdispatch({\n\t\t\ttype: 'CHANGE',\n\t\t\tval: e.target.value,\n\t\t\tvalidators: props.validators,\n\t\t});\n\t};\n\tconst touchHandler = () => {\n\t\tdispatch({\n\t\t\ttype: 'TOUCH',\n\t\t});\n\t};\n\tconst element =\n\t\tprops.element === 'input' ? (\n\t\t\t<input\n\t\t\t\tid={props.id}\n\t\t\t\ttype={props.type}\n\t\t\t\tplaceholder={props.placeholder}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t\tvalue={inputState.value}\n\t\t\t/>\n\t\t) : (\n\t\t\t<textarea\n\t\t\t\tid={props.id}\n\t\t\t\trows={props.rows || 3}\n\t\t\t\tonChange={changeHandler}\n\t\t\t\tvalue={inputState.value}\n\t\t\t\tonBlur={touchHandler}\n\t\t\t/>\n\t\t);\n\treturn (\n\t\t<div\n\t\t\tclassName={`form-control ${\n\t\t\t\t!inputState.isValid &&\n\t\t\t\tinputState.isTouched &&\n\t\t\t\t'form-control--invalid'\n\t\t\t}`}\n\t\t>\n\t\t\t<label htmlFor={props.id}>{props.label}</label>\n\t\t\t{element}\n\t\t\t{!inputState.isValid && inputState.isTouched && (\n\t\t\t\t<p>{props.errorText}</p>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\nconst formReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase 'INPUT_CHANGE':\n\t\t\tlet formIsValid = true;\n\t\t\tfor (const inputId in state.inputs) {\n\t\t\t\tif (!state.inputs[inputId]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (inputId === action.inputId) {\n\t\t\t\t\tformIsValid = formIsValid && action.isValid;\n\t\t\t\t} else {\n\t\t\t\t\tformIsValid = formIsValid && state.inputs[inputId].isValid;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tinputs: {\n\t\t\t\t\t...state.inputs,\n\t\t\t\t\t[action.inputId]: {\n\t\t\t\t\t\tvalue: action.value,\n\t\t\t\t\t\tisValid: action.isValid,\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\tisValid: formIsValid,\n\t\t\t};\n\t\tcase 'SET_DATA':\n\t\t\treturn {\n\t\t\t\tinputs: action.inputs,\n\t\t\t\tisValid: action.formIsValid,\n\t\t\t};\n\t\tdefault:\n\t\t\treturn state;\n\t}\n};\n\nconst useForm = (initialInputs, initialFormValidity) => {\n\tconst [formState, dispatch] = useReducer(formReducer, {\n\t\tinputs: initialInputs,\n\t\tisValid: initialFormValidity,\n\t});\n\tconst inputHandler = useCallback((id, value, isValid) => {\n\t\tdispatch({\n\t\t\ttype: 'INPUT_CHANGE',\n\t\t\tvalue: value,\n\t\t\tinputId: id,\n\t\t\tisValid: isValid,\n\t\t});\n\t}, []);\n\tconst setFormData = useCallback((inputData, formValidity) => {\n\t\tdispatch({\n\t\t\ttype: 'SET_DATA',\n\t\t\tinputs: inputData,\n\t\t\tformIsValid: formValidity,\n\t\t});\n\t}, []);\n\treturn [formState, inputHandler, setFormData];\n};\n\nexport default useForm;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      var F = function F() {};\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n  var normalCompletion = true,\n    didErr = false,\n    err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}"],"names":["useHttpClient","isLoading","error","sendRequest","clearError","authCtx","useContext","AuthContext","history","useHistory","useForm","title","value","isValid","description","address","image","formState","inputHandler","placeSubmitHandler","e","preventDefault","console","log","inputs","formData","FormData","append","process","Authorization","token","push","onClear","className","onSubmit","id","element","type","label","onInput","validators","VALIDATOR_REQUIRE","errorText","center","VALIDATOR_MINLENGTH","disabled","asOverlay","props","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","useEffect","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","onChange","pickedFile","fileIsValid","target","files","length","src","alt","Button","onClick","current","click","inputReducer","state","action","val","validate","isTouched","useReducer","initialValue","initialIsValid","inputState","dispatch","changeHandler","touchHandler","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initialInputs","initialFormValidity","useCallback","inputData","formValidity","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_EMAIL","o","allowArrayLike","it","Symbol","iterator","Array","isArray","unsupportedIterableToArray","i","F","s","n","done","_e","f","TypeError","err","normalCompletion","didErr","call","step","next","_e2","validator","trim","test"],"sourceRoot":""}